<metal:page define-macro="master">
<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />

<!--[if IE 9]><html class="lt-ie10" lang="en" > <![endif]-->
<html tal:define="portal_state context/@@plone_portal_state;
                  context_state context/@@plone_context_state;
                  plone_view context/@@plone;
                  lang portal_state/language;
                  view nocall:view | nocall: plone_view;
                  dummy python: plone_view.mark_view(view);
                  portal_url portal_state/portal_url;
                  checkPermission nocall: context/portal_membership/checkPermission;
                  site_properties context/portal_properties/site_properties;
                  ajax_http_x_requested_with request/HTTP_X_REQUESTED_WITH | nothing;
                  ajax_load request/ajax_load | nothing;
                  ajax_include_head request/ajax_include_head | nothing;
                  is_ajax python:ajax_http_x_requested_with or ajax_load;
                  dummy python:request.RESPONSE.setHeader('X-UA-Compatible', 'IE=edge,chrome=1');
                  navroot portal_state/navigation_root_url;
                  jsBuffer context/JSBuffer;
                  jsTranslate context/JSTranslate"
      tal:attributes="lang lang;" class="no-js">

    <metal:cache use-macro="context/global_cache_settings/macros/cacheheaders">
        Get the global cache headers located in global_cache_settings.
    </metal:cache>

    <tal:condition condition="not:is_ajax">

        <metal:head use-macro="context/head_macro/macros/head"></metal:head>

    <body tal:define="isRTL portal_state/is_rtl;
                      body_class python:plone_view.bodyClass(template, view);
                      classes python:context.restrictedTraverse('@@sunburstview').getColumnsClasses(view);
                      role python:test(user.has_role('Anonymous')==0, 'role-authenticated', 'role-anonymous')"
        tal:attributes="class python:'%s %s antialiased' % (body_class, role);
                        dir python:isRTL and 'rtl' or 'ltr'">

        <!-- Init. Facebook -->
        <tal:condition condition="python:test('/Cours' in context.absolute_url(), 1, 0)">
            <tal:condition condition="python:test(context.getCommentaires_sociaux() or context.getJaime_sociaux(), 1, 0)">
        <div id="fb-root"></div>
        <script>
            (function(d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.src = "//connect.facebook.net/fr_FR/all.js#xfbml=1&appId=658300347528870";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));
        </script>
            </tal:condition>
        </tal:condition>

        <!-- Header -->
        <header class="sticky" role="banner" aria-labelledby="page_title"
                tal:condition="not:python:user.has_role('Anonymous')">
            <tal:replace tal:replace="structure provider:plone.portalheader" />
        </header>
        <!--header tal:condition="python:user.has_role('Anonymous')">
        </header-->

        <!-- Contenu -->
        <metal:slot define-slot="content">
            <metal:macro define-macro="content">
                <metal:slot define-slot="body">
                    <metal:bodytext define-slot="main">
                        <metal:slot define-slot="content-core">
                            <!-- structure de base -->
                        </metal:slot>
                    </metal:bodytext>
                </metal:slot>
            </metal:macro>
        </metal:slot>

        <!-- Footer -->
        <metal:head use-macro="context/footer_macro/macros/footer"></metal:head>

        <!--
            Scripts
                - generic libraries & frameworks
                - l10n messages
                - application-wide
                - specific to “ non-student ” roles post
                - specific to “ non-student ” roles app
                - direct JS buffer
                - “ doc. ready ” JS buffer
        -->
        <script charset="UTF-8"
                tal:attributes="src string:${navroot}/++resource++jalon.theme.javascript/post.min.js"></script>
        <script charset="UTF-8"
                tal:define="tmp python:jsTranslate.addJsTranslate([('MSG_LOADING_TEXT','Actualisation en cours…'),('MSG_LOADING_OK_TEXT','Actualisation réussie !'),('MSG_TAP2CLOSE_TEXT','Toucher pour fermer')])"
                tal:content="jsTranslate/getJsTranslate" />
        <script charset="UTF-8"
                tal:attributes="src string:${navroot}/++resource++jalon.theme.javascript/app.min.js"></script>
        <tal:condition condition="python:not(user.has_role('Etudiant'))">
        <script charset="UTF-8"
                tal:attributes="src string:${navroot}/++resource++jalon.theme.javascript/staff-post.min.js"></script>
        <script charset="UTF-8"
                tal:content="structure string:var ABSOLUTE_URL = '${context/absolute_url}'" />
        <script charset="UTF-8"
                tal:attributes="src string:${navroot}/++resource++jalon.theme.javascript/staff-app.min.js"></script>
        </tal:condition>
        <script charset="UTF-8"
                tal:define="directBuffer python:jsBuffer.getDirectBuffer()"
                tal:condition="directBuffer"
                tal:content="structure directBuffer" />
        <script charset="UTF-8"
                tal:define="buffer python:jsBuffer.getBuffer()"
                tal:condition="buffer"
                tal:content="structure buffer" />

    </body>

    </tal:condition>

    <tal:condition condition="is_ajax">
        <metal:slot define-slot="content">
            Chargement en AJAX
        </metal:slot>
    </tal:condition>

</html>

</metal:page>